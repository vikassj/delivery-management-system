{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vikas\\\\Desktop\\\\FYN\\\\FE\\\\vehical-service\\\\src\\\\components\\\\RevenueCharts.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\n// Dummy data for daily, monthly, and yearly revenues \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst revenueData = {\n  daily: [{\n    name: 'Mon',\n    revenue: 120\n  }, {\n    name: 'Tue',\n    revenue: 150\n  }, {\n    name: 'Wed',\n    revenue: 200\n  }, {\n    name: 'Thu',\n    revenue: 180\n  }, {\n    name: 'Fri',\n    revenue: 300\n  }, {\n    name: 'Sat',\n    revenue: 250\n  }, {\n    name: 'Sun',\n    revenue: 400\n  }],\n  monthly: [{\n    name: 'Jan',\n    revenue: 400\n  }, {\n    name: 'Feb',\n    revenue: 800\n  }, {\n    name: 'Mar',\n    revenue: 700\n  }, {\n    name: 'Apr',\n    revenue: 600\n  }, {\n    name: 'May',\n    revenue: 900\n  }, {\n    name: 'Jun',\n    revenue: 500\n  }],\n  yearly: [{\n    name: '2020',\n    revenue: 12000\n  }, {\n    name: '2021',\n    revenue: 15000\n  }, {\n    name: '2022',\n    revenue: 20000\n  }, {\n    name: '2023',\n    revenue: 25000\n  }]\n};\nfunction RevenueCharts() {\n  _s();\n  const [timeframe, setTimeframe] = useState('monthly'); // Default to monthly \n\n  const handleTimeframeChange = e => {\n    setTimeframe(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Revenue Charts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timeframeSelect\",\n        className: \"form-label\",\n        children: \"Select Timeframe:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"timeframeSelect\",\n        className: \"form-select\",\n        value: timeframe,\n        onChange: handleTimeframeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"daily\",\n          children: \"Daily\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"monthly\",\n          children: \"Monthly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"yearly\",\n          children: \"Yearly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: revenueData[timeframe],\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"revenue\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(RevenueCharts, \"4bTggMw5Vg2+jgdO4rPmmFHnng0=\");\n_c = RevenueCharts;\nexport default RevenueCharts;\nvar _c;\n$RefreshReg$(_c, \"RevenueCharts\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","revenueData","daily","name","revenue","monthly","yearly","RevenueCharts","_s","timeframe","setTimeframe","handleTimeframeChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","width","height","data","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["C:/Users/vikas/Desktop/FYN/FE/vehical-service/src/components/RevenueCharts.js"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts'; \r\n\r\n// Dummy data for daily, monthly, and yearly revenues \r\nconst revenueData = { \r\n    daily: [ \r\n        { name: 'Mon', revenue: 120 }, \r\n        { name: 'Tue', revenue: 150 }, \r\n        { name: 'Wed', revenue: 200 }, \r\n        { name: 'Thu', revenue: 180 }, \r\n        { name: 'Fri', revenue: 300 }, \r\n        { name: 'Sat', revenue: 250 }, \r\n        { name: 'Sun', revenue: 400 }, \r\n    ], \r\n    monthly: [ \r\n        { name: 'Jan', revenue: 400 }, \r\n        { name: 'Feb', revenue: 800 }, \r\n        { name: 'Mar', revenue: 700 }, \r\n        { name: 'Apr', revenue: 600 }, \r\n        { name: 'May', revenue: 900 }, \r\n        { name: 'Jun', revenue: 500 }, \r\n    ], \r\n    yearly: [ \r\n        { name: '2020', revenue: 12000 }, \r\n        { name: '2021', revenue: 15000 }, \r\n        { name: '2022', revenue: 20000 }, \r\n        { name: '2023', revenue: 25000 }, \r\n    ], \r\n}; \r\n\r\nfunction RevenueCharts() { \r\n    const [timeframe, setTimeframe] = useState('monthly'); // Default to monthly \r\n\r\n    const handleTimeframeChange = (e) => { \r\n        setTimeframe(e.target.value); \r\n    }; \r\n\r\n    return ( \r\n        <div className=\"container my-4\"> \r\n            <h2 className=\"mb-4\">Revenue Charts</h2> \r\n            <div className=\"mb-3\"> \r\n                <label htmlFor=\"timeframeSelect\" className=\"form-label\">Select Timeframe:</label> \r\n                <select \r\n                    id=\"timeframeSelect\" \r\n                    className=\"form-select\" \r\n                    value={timeframe} \r\n                    onChange={handleTimeframeChange} \r\n                > \r\n                    <option value=\"daily\">Daily</option> \r\n                    <option value=\"monthly\">Monthly</option> \r\n                    <option value=\"yearly\">Yearly</option> \r\n                </select> \r\n            </div> \r\n            <ResponsiveContainer width=\"100%\" height={400}> \r\n                <LineChart data={revenueData[timeframe]}> \r\n                    <CartesianGrid strokeDasharray=\"3 3\" /> \r\n                    <XAxis dataKey=\"name\" /> \r\n                    <YAxis /> \r\n                    <Tooltip /> \r\n                    <Legend /> \r\n                    <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#8884d8\" /> \r\n                </LineChart> \r\n            </ResponsiveContainer> \r\n        </div> \r\n    ); \r\n} \r\n\r\nexport default RevenueCharts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}